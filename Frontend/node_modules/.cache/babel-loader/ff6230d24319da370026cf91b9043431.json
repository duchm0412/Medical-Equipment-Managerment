{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\\\u0110\\u1ED3 \\xE1n web\\\\Project Web \\u0110\\u1ED3 \\xC1n b\\u1EA3n cu\\u1ED1i\\\\codeguidi\\\\codeguidi\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\\\u0110\\u1ED3 \\xE1n web\\\\Project Web \\u0110\\u1ED3 \\xC1n b\\u1EA3n cu\\u1ED1i\\\\codeguidi\\\\codeguidi\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"E:\\\\\\u0110\\u1ED3 \\xE1n web\\\\Project Web \\u0110\\u1ED3 \\xC1n b\\u1EA3n cu\\u1ED1i\\\\codeguidi\\\\codeguidi\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\\\u0110\\u1ED3 \\xE1n web\\\\Project Web \\u0110\\u1ED3 \\xC1n b\\u1EA3n cu\\u1ED1i\\\\codeguidi\\\\codeguidi\\\\Frontend\\\\src\\\\pages\\\\auth\\\\SignIn.js\";\n\nimport React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Button, Card, CardBody, FormGroup, CustomInput, Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\nimport { Formik, FastField, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { ReactstrapInput } from \"reactstrap-formik\";\nimport LoginApi from \"../../api/LoginApi\";\nimport UserApi from \"../../api/UserApi\";\nimport Storage from \"../../Storage/Storage\";\nimport { toastr } from \"react-redux-toastr\";\nimport { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setTokenInfo, setUserLoginInfo, setRememberMeInfo } from \"../../redux/actions/userLoginInfoActions\"; // import avatar from \"../../assets/img/avatars/avatar.jpg\";\n\nimport { selectRememberMe } from \"../../redux/selectors/userLoginInfoSelector\";\n\nvar SignIn = function SignIn(props) {\n  var showWrongLoginNotification = function showWrongLoginNotification(title, message) {\n    var options = {\n      timeOut: 2500,\n      showCloseButton: false,\n      progressBar: false,\n      position: \"top-right\"\n    }; // show notification\n\n    toastr.error(title, message, options);\n  }; //////////////////////////\n  ///////////////////////\n\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpenModal = _useState2[0],\n      setOpenModal = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isDisabledResendEmailButton = _useState6[0],\n      setDisabledResendEmailButton = _useState6[1];\n\n  var resendEmailToActiveAccount = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setDisabledResendEmailButton(true); // call api\n\n              _context.next = 3;\n              return UserApi.resendEmailToActiveAccount(email);\n\n            case 3:\n              setDisabledResendEmailButton(false);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function resendEmailToActiveAccount() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var _useState7 = useState(props.isRememberMe),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isRememberMe = _useState8[0],\n      setRememberMe = _useState8[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center mt-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \" \", \"Welcome to system \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, \"Medical Equipment Management\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \" Sign in to your account to continue\")), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      userName: \"\",\n      password: \"\",\n      errorForm: \"\"\n    },\n    validationSchema: Yup.object({\n      userName: Yup.string().required(\"Required\").max(50, \"Must be between 6 to 50 characters\").min(6, \"Must be between 6 to 50 characters\"),\n      password: Yup.string().max(50, \"Must be between 6 to 50 characters\").min(6, \"Must be between 6 to 50 characters\").required(\"Required\")\n    }),\n    onSubmit: /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values, _ref2) {\n        var setFieldError, result, user;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                setFieldError = _ref2.setFieldError;\n                _context2.prev = 1;\n                _context2.next = 4;\n                return LoginApi.login(values.userName, values.password);\n\n              case 4:\n                result = _context2.sent;\n\n                // login successfully!\n                // account not active\n                if (result.status === \"NOT_ACTIVE\") {\n                  // open model\n                  setOpenModal(true);\n                  setEmail(result.email);\n                } else {\n                  // account actived\n                  // save remember me to storage\n                  Storage.setRememberMe(isRememberMe); // save token to storage\n\n                  Storage.setToken(result.token); // save user info to storage\n\n                  user = {\n                    firstName: result.firstName,\n                    lastName: result.lastName,\n                    userName: result.userName,\n                    email: result.email,\n                    role: result.role,\n                    status: result.status\n                  };\n                  Storage.setUserInfo(user); // save remember me to redux\n\n                  props.setRememberMeInfo(isRememberMe); // save token to redux\n\n                  props.setTokenInfo(result.token); // save user info to redux\n\n                  props.setUserLoginInfo(user); // redirect home page\n\n                  props.history.push(\"/dashboard/default\");\n                }\n\n                _context2.next = 11;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](1);\n\n                if (_context2.t0.status === 401) {\n                  showWrongLoginNotification(\"Login Failed\", \"Wrong username or password!\");\n                } else {\n                  setFieldError(\"errorForm\", \"There is an error from the server\");\n                  console.log(_context2.t0);\n                }\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 8]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, function (_ref4) {\n    var isSubmitting = _ref4.isSubmitting;\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m-sm-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://inhoangkien.vn/wp-content/uploads/2020/04/Logo-B%E1%BB%99-Y-t%E1%BA%BF-01-e1585994422207-300x213.png\",\n      width: 250,\n      height: 130,\n      alt: \"Chris Wood\",\n      className: \"img-fluid rounded-circle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      label: \"Username\",\n      bsSize: \"lg\",\n      type: \"text\",\n      name: \"userName\",\n      placeholder: \"Enter your username\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      label: \"Password\",\n      bsSize: \"lg\",\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Enter password\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/auth/reset-password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 23\n      }\n    }, \"Forgot password?\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/auth/sign-up\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 23\n      }\n    }, \"Not an acount? Sign-up\"))), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"errorForm\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      style: {\n        display: \"block\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CustomInput, {\n      type: \"checkbox\",\n      id: \"rememberMe\",\n      label: \"Remember me next time\",\n      checked: isRememberMe,\n      onChange: function onChange(e) {\n        return setRememberMe(e.target.checked);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center mt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      size: \"lg\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }\n    }, \"Sign in\"))))));\n  }), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpenModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }, \"You need to confirm your account\"), /*#__PURE__*/React.createElement(ModalBody, {\n    className: \"m-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, \"Your account is not active.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  }, \"Please check your email (\", /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 38\n    }\n  }, email), \") to active account.\")), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: resendEmailToActiveAccount,\n    style: {\n      marginLeft: 10\n    },\n    disabled: isDisabledResendEmailButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 11\n    }\n  }, \"Resend\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: function onClick() {\n      return setOpenModal(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 11\n    }\n  }, \"Close\"))));\n};\n\nvar mapGlobalStateToProps = function mapGlobalStateToProps(state) {\n  return {\n    isRememberMe: selectRememberMe(state)\n  };\n};\n\nexport default connect(mapGlobalStateToProps, {\n  setTokenInfo: setTokenInfo,\n  setUserLoginInfo: setUserLoginInfo,\n  setRememberMeInfo: setRememberMeInfo\n})(SignIn);","map":{"version":3,"sources":["E:/Đồ án web/Project Web Đồ Án bản cuối/codeguidi/codeguidi/Frontend/src/pages/auth/SignIn.js"],"names":["React","Link","useHistory","Button","Card","CardBody","FormGroup","CustomInput","Modal","ModalBody","ModalFooter","ModalHeader","Formik","FastField","Form","ErrorMessage","Yup","ReactstrapInput","LoginApi","UserApi","Storage","toastr","useState","connect","setTokenInfo","setUserLoginInfo","setRememberMeInfo","selectRememberMe","SignIn","props","showWrongLoginNotification","title","message","options","timeOut","showCloseButton","progressBar","position","error","isOpenModal","setOpenModal","email","setEmail","isDisabledResendEmailButton","setDisabledResendEmailButton","resendEmailToActiveAccount","isRememberMe","setRememberMe","userName","password","errorForm","object","string","required","max","min","values","setFieldError","login","result","status","setToken","token","user","firstName","lastName","role","setUserInfo","history","push","console","log","isSubmitting","display","e","target","checked","marginLeft","mapGlobalStateToProps","state"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  CustomInput,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n} from \"reactstrap\";\r\nimport { Formik, FastField, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { ReactstrapInput } from \"reactstrap-formik\";\r\nimport LoginApi from \"../../api/LoginApi\";\r\nimport UserApi from \"../../api/UserApi\";\r\nimport Storage from \"../../Storage/Storage\";\r\nimport { toastr } from \"react-redux-toastr\";\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setTokenInfo,\r\n  setUserLoginInfo,\r\n  setRememberMeInfo,\r\n} from \"../../redux/actions/userLoginInfoActions\";\r\n// import avatar from \"../../assets/img/avatars/avatar.jpg\";\r\nimport { selectRememberMe } from \"../../redux/selectors/userLoginInfoSelector\";\r\n\r\nconst SignIn = (props) => {\r\n  const showWrongLoginNotification = (title, message) => {\r\n    const options = {\r\n      timeOut: 2500,\r\n      showCloseButton: false,\r\n      progressBar: false,\r\n      position: \"top-right\",\r\n    };\r\n\r\n    // show notification\r\n    toastr.error(title, message, options);\r\n  };\r\n  //////////////////////////\r\n\r\n  ///////////////////////\r\n  const [isOpenModal, setOpenModal] = useState(false);\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isDisabledResendEmailButton, setDisabledResendEmailButton] =\r\n    useState(false);\r\n\r\n  const resendEmailToActiveAccount = async () => {\r\n    setDisabledResendEmailButton(true);\r\n    // call api\r\n    await UserApi.resendEmailToActiveAccount(email);\r\n    setDisabledResendEmailButton(false);\r\n  };\r\n\r\n  const [isRememberMe, setRememberMe] = useState(props.isRememberMe);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"text-center mt-4\">\r\n        <p className=\"lead\">\r\n          {\" \"}\r\n          Welcome to system <b>Medical Equipment Management</b>\r\n        </p>\r\n        <p className=\"lead\"> Sign in to your account to continue</p>\r\n      </div>\r\n\r\n      <Formik\r\n        initialValues={{\r\n          userName: \"\",\r\n          password: \"\",\r\n          errorForm: \"\",\r\n        }}\r\n        validationSchema={Yup.object({\r\n          userName: Yup.string()\r\n            .required(\"Required\")\r\n            .max(50, \"Must be between 6 to 50 characters\")\r\n            .min(6, \"Must be between 6 to 50 characters\"),\r\n\r\n          password: Yup.string()\r\n            .max(50, \"Must be between 6 to 50 characters\")\r\n            .min(6, \"Must be between 6 to 50 characters\")\r\n            .required(\"Required\"),\r\n        })}\r\n        onSubmit={async (values, { setFieldError }) => {\r\n          try {\r\n            // call api\r\n            const result = await LoginApi.login(\r\n              values.userName,\r\n              values.password\r\n            );\r\n\r\n            // login successfully!\r\n            // account not active\r\n            if (result.status === \"NOT_ACTIVE\") {\r\n              // open model\r\n              setOpenModal(true);\r\n              setEmail(result.email);\r\n            } else {\r\n              // account actived\r\n              // save remember me to storage\r\n              Storage.setRememberMe(isRememberMe);\r\n              // save token to storage\r\n              Storage.setToken(result.token);\r\n              // save user info to storage\r\n              const user = {\r\n                firstName: result.firstName,\r\n                lastName: result.lastName,\r\n                userName: result.userName,\r\n                email: result.email,\r\n                role: result.role,\r\n                status: result.status,\r\n              };\r\n              Storage.setUserInfo(user);\r\n              // save remember me to redux\r\n              props.setRememberMeInfo(isRememberMe);\r\n              // save token to redux\r\n              props.setTokenInfo(result.token);\r\n              // save user info to redux\r\n              props.setUserLoginInfo(user);\r\n              // redirect home page\r\n              props.history.push(\"/dashboard/default\");\r\n            }\r\n          } catch (error) {\r\n            if (error.status === 401) {\r\n              showWrongLoginNotification(\r\n                \"Login Failed\",\r\n                \"Wrong username or password!\"\r\n              );\r\n            } else {\r\n              setFieldError(\"errorForm\", \"There is an error from the server\");\r\n              console.log(error);\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <Card>\r\n            <CardBody>\r\n              <div className=\"m-sm-4\">\r\n                <div className=\"text-center\">\r\n                  <img\r\n                    src=\"https://inhoangkien.vn/wp-content/uploads/2020/04/Logo-B%E1%BB%99-Y-t%E1%BA%BF-01-e1585994422207-300x213.png\"\r\n                    width={250}\r\n                    height={130}\r\n                    alt=\"Chris Wood\"\r\n                    className=\"img-fluid rounded-circle\"\r\n                  />\r\n                </div>\r\n                <Form>\r\n                  {/* username */}\r\n                  <FormGroup>\r\n                    <FastField\r\n                      label=\"Username\"\r\n                      bsSize=\"lg\"\r\n                      type=\"text\"\r\n                      name=\"userName\"\r\n                      placeholder=\"Enter your username\"\r\n                      component={ReactstrapInput}\r\n                    />\r\n                  </FormGroup>\r\n\r\n                  {/* password */}\r\n                  <FormGroup>\r\n                    <FastField\r\n                      label=\"Password\"\r\n                      bsSize=\"lg\"\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      placeholder=\"Enter password\"\r\n                      component={ReactstrapInput}\r\n                    />\r\n                    {/* forgot password */}\r\n                    <small>\r\n                      <Link to=\"/auth/reset-password\">Forgot password?</Link>\r\n                    </small>\r\n                    <br></br>\r\n                    <small>\r\n                      <Link to=\"/auth/sign-up\">Not an acount? Sign-up</Link>\r\n                    </small>\r\n                  </FormGroup>\r\n\r\n                  <ErrorMessage\r\n                    name=\"errorForm\"\r\n                    component={\"div\"}\r\n                    className=\"invalid-feedback\"\r\n                    style={{ display: \"block\" }}\r\n                  />\r\n\r\n                  {/* remember me */}\r\n                  <div>\r\n                    <CustomInput\r\n                      type=\"checkbox\"\r\n                      id=\"rememberMe\"\r\n                      label=\"Remember me next time\"\r\n                      checked={isRememberMe}\r\n                      onChange={(e) => setRememberMe(e.target.checked)}\r\n                    />\r\n                  </div>\r\n\r\n                  {/* submit */}\r\n                  <div className=\"text-center mt-3\">\r\n                    <Button\r\n                      type=\"submit\"\r\n                      color=\"primary\"\r\n                      size=\"lg\"\r\n                      disabled={isSubmitting}\r\n                    >\r\n                      Sign in\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        )}\r\n      </Formik>\r\n\r\n      <Modal isOpen={isOpenModal}>\r\n        {/* header */}\r\n        <ModalHeader>You need to confirm your account</ModalHeader>\r\n\r\n        {/* body */}\r\n        <ModalBody className=\"m-3\">\r\n          <p>Your account is not active.</p>\r\n          <p>\r\n            Please check your email (<b>{email}</b>) to active account.\r\n          </p>\r\n        </ModalBody>\r\n\r\n        {/* footer */}\r\n        <ModalFooter>\r\n          {/* resend */}\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={resendEmailToActiveAccount}\r\n            style={{ marginLeft: 10 }}\r\n            disabled={isDisabledResendEmailButton}\r\n          >\r\n            Resend\r\n          </Button>\r\n\r\n          {/* close button */}\r\n          <Button color=\"primary\" onClick={() => setOpenModal(false)}>\r\n            Close\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapGlobalStateToProps = (state) => {\r\n  return {\r\n    isRememberMe: selectRememberMe(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapGlobalStateToProps, {\r\n  setTokenInfo,\r\n  setUserLoginInfo,\r\n  setRememberMeInfo,\r\n})(SignIn);\r\n"]},"metadata":{},"sourceType":"module"}