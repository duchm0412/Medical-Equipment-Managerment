{"ast":null,"code":"import _defineProperty from \"E:\\\\\\u0110\\u1ED3 \\xE1n web\\\\Project Web \\u0110\\u1ED3 \\xC1n b\\u1EA3n cu\\u1ED1i\\\\codeguidi\\\\codeguidi\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"E:\\\\\\u0110\\u1ED3 \\xE1n web\\\\Project Web \\u0110\\u1ED3 \\xC1n b\\u1EA3n cu\\u1ED1i\\\\codeguidi\\\\codeguidi\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\\\u0110\\u1ED3 \\xE1n web\\\\Project Web \\u0110\\u1ED3 \\xC1n b\\u1EA3n cu\\u1ED1i\\\\codeguidi\\\\codeguidi\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\\\u0110\\u1ED3 \\xE1n web\\\\Project Web \\u0110\\u1ED3 \\xC1n b\\u1EA3n cu\\u1ED1i\\\\codeguidi\\\\codeguidi\\\\Frontend\\\\src\\\\pages\\\\staffManager\\\\updateStaffForm.js\";\n\nimport React from \"react\";\nimport { Button, Card, CardBody, FormGroup } from \"reactstrap\";\nimport { Formik, FastField, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { ReactstrapInput } from \"reactstrap-formik\";\nimport DepartmentApi from \"../../api/DepartmentApi\";\nimport { toastr } from \"react-redux-toastr\";\nimport StaffApi from \"../../api/StaffApi\";\n\nvar UpdateStaffForm = function UpdateStaffForm(props) {\n  var showSuccessNotification = function showSuccessNotification(title, message) {\n    var options = {\n      timeOut: 2500,\n      showCloseButton: false,\n      progressBar: true,\n      position: \"top-right\"\n    };\n    toastr.success(title, message, options);\n  };\n\n  var showErrorNotification = function showErrorNotification(title, message) {\n    var options = {\n      timeOut: 2500,\n      showCloseButton: false,\n      progressBar: true,\n      position: \"top-right\"\n    };\n    toastr.error(title, message, options);\n  };\n\n  var removeStaffInStorage = function removeStaffInStorage() {\n    sessionStorage.removeItem(\"staffId\");\n    sessionStorage.removeItem(\"fullName\");\n    sessionStorage.removeItem(\"phone\");\n    sessionStorage.removeItem(\"email\");\n    sessionStorage.removeItem(\"departmentId\");\n    sessionStorage.removeItem(\"role\");\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      staffId: sessionStorage.getItem(\"staffId\"),\n      fullName: sessionStorage.getItem(\"fullName\"),\n      phone: sessionStorage.getItem(\"phone\"),\n      email: sessionStorage.getItem(\"email\"),\n      departmentId: sessionStorage.getItem(\"departmentId\"),\n      role: sessionStorage.getItem(\"role\"),\n      errorForm: \"\"\n    },\n    validationSchema: Yup.object({\n      fullName: Yup.string().max(50, \"Tối đa 50 ký tự\").required(\"Required\"),\n      phone: Yup.string().max(11, \"Số điện thoại từ 10 đến 11 chữ số \").max(10, \"Số điện thoại từ 10 đến 11 chữ số\").required(\"Required\").test(\"checkUniquePhone\", \"Số điện thoại này đã tồn tại\", /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(phone) {\n          var isExists;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return StaffApi.findStaffByStaffPhone(phone);\n\n                case 2:\n                  isExists = _context.sent;\n                  return _context.abrupt(\"return\", !isExists);\n\n                case 4:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()),\n      email: Yup.string().max(100, \"Tối đa 100 ký tự\").required(\"Required\").test(\"checkUniquePhone\", \"Email này đã được sử dụng\", /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(email) {\n          var isExists;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return StaffApi.findStaffByEmail(email);\n\n                case 2:\n                  isExists = _context2.sent;\n                  return _context2.abrupt(\"return\", !isExists);\n\n                case 4:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }()),\n      departmentId: Yup.string().max(10, \"Tối đa 10 ký tự\").required(\"Required\").test(\"checkUniquePhone\", \"Hiện không tồn tại phòng ban này\", /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(departmentId) {\n          var isExists;\n          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return DepartmentApi.existsByDepartmentId(departmentId);\n\n                case 2:\n                  isExists = _context3.sent;\n                  return _context3.abrupt(\"return\", isExists);\n\n                case 4:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x3) {\n          return _ref3.apply(this, arguments);\n        };\n      }()),\n      role: Yup.string().max(10, \"Tối đa 10 ký tự\").required(\"Required\").test(\"checkformequipmentStatus\", \"Chỉ chấp nhận các trường: Admin hoặc Employee hoặc Manager \", function (role) {\n        if (role.match(\"Admin\") || role.match(\"Employee\") || role.match(\"Manager\")) {\n          return true;\n        }\n\n        return false;\n      })\n    }),\n    onSubmit: /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(values, _ref4) {\n        var setFieldError, result;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                setFieldError = _ref4.setFieldError;\n                _context4.prev = 1;\n                _context4.next = 4;\n                return StaffApi.update(values.staffId, values.fullName, values.phone, values.email, values.departmentId, values.role);\n\n              case 4:\n                result = _context4.sent;\n\n                if (result == \"success\") {\n                  showSuccessNotification(\"Cập nhật nhân viên\", \">>> Thành công\");\n                } else {\n                  showErrorNotification(\"Cập nhật nhân viên\", \">>> Thất bại\");\n                }\n\n                removeStaffInStorage();\n                window.location.reload();\n                _context4.next = 13;\n                break;\n\n              case 10:\n                _context4.prev = 10;\n                _context4.t0 = _context4[\"catch\"](1);\n                setFieldError(\"errorForm\", \"Lỗi hệ thống, xin lỗi về sự bất tiện này\");\n\n              case 13:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[1, 10]]);\n      }));\n\n      return function (_x4, _x5) {\n        return _ref5.apply(this, arguments);\n      };\n    }(),\n    validateOnChange: false,\n    validateOnBlur: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, function (_ref6) {\n    var _React$createElement;\n\n    var isSubmitting = _ref6.isSubmitting;\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m-sm-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      label: \"M\\xE3 nh\\xE2n vi\\xEAn\",\n      bsSize: \"sm\",\n      type: \"text\",\n      name: \"staffId\",\n      readonly: \"readonly\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, (_React$createElement = {\n      label: true\n    }, _defineProperty(_React$createElement, \"label\", \"H\\u1ECD t\\xEAn nh\\xE2n vi\\xEAn\"), _defineProperty(_React$createElement, \"bsSize\", \"sm\"), _defineProperty(_React$createElement, \"type\", \"text\"), _defineProperty(_React$createElement, \"name\", \"fullName\"), _defineProperty(_React$createElement, \"component\", ReactstrapInput), _defineProperty(_React$createElement, \"__self\", _this), _defineProperty(_React$createElement, \"__source\", {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }), _React$createElement))), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      label: \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\",\n      bsSize: \"sm\",\n      type: \"text\",\n      name: \"phone\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      bsSize: \"sm\",\n      type: \"text\",\n      label: \"Email\",\n      name: \"email\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      bsSize: \"sm\",\n      type: \"text\",\n      label: \"Ph\\xF2ng ban\",\n      name: \"departmentId\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      bsSize: \"sm\",\n      type: \"text\",\n      label: \"C\\u1EA5p b\\u1EADc\",\n      name: \"role\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"errorForm\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      style: {\n        display: \"block\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: \"right\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      size: \"sm\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }\n    }, \"C\\u1EADp nh\\u1EADt\"), /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      size: \"sm\",\n      onClick: props.closeModal,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }\n    }, \"\\u0110\\xF3ng\"))))));\n  }));\n};\n\nexport default UpdateStaffForm;","map":{"version":3,"sources":["E:/Đồ án web/Project Web Đồ Án bản cuối/codeguidi/codeguidi/Frontend/src/pages/staffManager/updateStaffForm.js"],"names":["React","Button","Card","CardBody","FormGroup","Formik","FastField","Form","ErrorMessage","Yup","ReactstrapInput","DepartmentApi","toastr","StaffApi","UpdateStaffForm","props","showSuccessNotification","title","message","options","timeOut","showCloseButton","progressBar","position","success","showErrorNotification","error","removeStaffInStorage","sessionStorage","removeItem","staffId","getItem","fullName","phone","email","departmentId","role","errorForm","object","string","max","required","test","findStaffByStaffPhone","isExists","findStaffByEmail","existsByDepartmentId","match","values","setFieldError","update","result","window","location","reload","isSubmitting","display","float","closeModal"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Button, Card, CardBody, FormGroup } from \"reactstrap\";\r\nimport { Formik, FastField, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { ReactstrapInput } from \"reactstrap-formik\";\r\nimport DepartmentApi from \"../../api/DepartmentApi\";\r\nimport { toastr } from \"react-redux-toastr\";\r\nimport StaffApi from \"../../api/StaffApi\";\r\n\r\nconst UpdateStaffForm = (props) => {\r\n  const showSuccessNotification = (title, message) => {\r\n    const options = {\r\n      timeOut: 2500,\r\n      showCloseButton: false,\r\n      progressBar: true,\r\n      position: \"top-right\",\r\n    };\r\n    toastr.success(title, message, options);\r\n  };\r\n  const showErrorNotification = (title, message) => {\r\n    const options = {\r\n      timeOut: 2500,\r\n      showCloseButton: false,\r\n      progressBar: true,\r\n      position: \"top-right\",\r\n    };\r\n    toastr.error(title, message, options);\r\n  };\r\n  const removeStaffInStorage = () => {\r\n    sessionStorage.removeItem(\"staffId\");\r\n    sessionStorage.removeItem(\"fullName\");\r\n    sessionStorage.removeItem(\"phone\");\r\n    sessionStorage.removeItem(\"email\");\r\n    sessionStorage.removeItem(\"departmentId\");\r\n    sessionStorage.removeItem(\"role\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          staffId: sessionStorage.getItem(\"staffId\"),\r\n          fullName: sessionStorage.getItem(\"fullName\"),\r\n          phone: sessionStorage.getItem(\"phone\"),\r\n          email: sessionStorage.getItem(\"email\"),\r\n          departmentId: sessionStorage.getItem(\"departmentId\"),\r\n          role: sessionStorage.getItem(\"role\"),\r\n          errorForm: \"\",\r\n        }}\r\n        validationSchema={Yup.object({\r\n          fullName: Yup.string()\r\n            .max(50, \"Tối đa 50 ký tự\")\r\n            .required(\"Required\"),\r\n          phone: Yup.string()\r\n            .max(11, \"Số điện thoại từ 10 đến 11 chữ số \")\r\n            .max(10, \"Số điện thoại từ 10 đến 11 chữ số\")\r\n            .required(\"Required\")\r\n            .test(\r\n              \"checkUniquePhone\",\r\n              \"Số điện thoại này đã tồn tại\",\r\n              async (phone) => {\r\n                const isExists = await StaffApi.findStaffByStaffPhone(phone);\r\n                return !isExists;\r\n              }\r\n            ),\r\n          email: Yup.string()\r\n            .max(100, \"Tối đa 100 ký tự\")\r\n            .required(\"Required\")\r\n            .test(\r\n              \"checkUniquePhone\",\r\n              \"Email này đã được sử dụng\",\r\n              async (email) => {\r\n                const isExists = await StaffApi.findStaffByEmail(email);\r\n                return !isExists;\r\n              }\r\n            ),\r\n          departmentId: Yup.string()\r\n            .max(10, \"Tối đa 10 ký tự\")\r\n            .required(\"Required\")\r\n            .test(\r\n              \"checkUniquePhone\",\r\n              \"Hiện không tồn tại phòng ban này\",\r\n              async (departmentId) => {\r\n                const isExists = await DepartmentApi.existsByDepartmentId(\r\n                  departmentId\r\n                );\r\n                return isExists;\r\n              }\r\n            ),\r\n          role: Yup.string()\r\n            .max(10, \"Tối đa 10 ký tự\")\r\n            .required(\"Required\")\r\n            .test(\r\n              \"checkformequipmentStatus\",\r\n              \"Chỉ chấp nhận các trường: Admin hoặc Employee hoặc Manager \",\r\n              (role) => {\r\n                if (\r\n                  role.match(\"Admin\") ||\r\n                  role.match(\"Employee\") ||\r\n                  role.match(\"Manager\")\r\n                ) {\r\n                  return true;\r\n                }\r\n                return false;\r\n              }\r\n            ),\r\n        })}\r\n        onSubmit={async (values, { setFieldError }) => {\r\n          try {\r\n            const result = await StaffApi.update(\r\n              values.staffId,\r\n              values.fullName,\r\n              values.phone,\r\n              values.email,\r\n              values.departmentId,\r\n              values.role\r\n            );\r\n            if (result == \"success\") {\r\n              showSuccessNotification(\"Cập nhật nhân viên\", \">>> Thành công\");\r\n            } else {\r\n              showErrorNotification(\"Cập nhật nhân viên\", \">>> Thất bại\");\r\n            }\r\n            removeStaffInStorage();\r\n            window.location.reload();\r\n          } catch (error) {\r\n            setFieldError(\r\n              \"errorForm\",\r\n              \"Lỗi hệ thống, xin lỗi về sự bất tiện này\"\r\n            );\r\n          }\r\n        }}\r\n        validateOnChange={false}\r\n        validateOnBlur={false}\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <Card>\r\n            <CardBody>\r\n              <div className=\"m-sm-4\">\r\n                <Form>\r\n                  <FormGroup>\r\n                    <FastField\r\n                      label=\"Mã nhân viên\"\r\n                      bsSize=\"sm\"\r\n                      type=\"text\"\r\n                      name=\"staffId\"\r\n                      readonly=\"readonly\"\r\n                      component={ReactstrapInput}\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <FastField\r\n                      label\r\n                      label=\"Họ tên nhân viên\"\r\n                      bsSize=\"sm\"\r\n                      type=\"text\"\r\n                      name=\"fullName\"\r\n                      component={ReactstrapInput}\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <FastField\r\n                      label=\"Số điện thoại\"\r\n                      bsSize=\"sm\"\r\n                      type=\"text\"\r\n                      name=\"phone\"\r\n                      component={ReactstrapInput}\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <FastField\r\n                      bsSize=\"sm\"\r\n                      type=\"text\"\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      component={ReactstrapInput}\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <FastField\r\n                      bsSize=\"sm\"\r\n                      type=\"text\"\r\n                      label=\"Phòng ban\"\r\n                      name=\"departmentId\"\r\n                      component={ReactstrapInput}\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <FastField\r\n                      bsSize=\"sm\"\r\n                      type=\"text\"\r\n                      label=\"Cấp bậc\"\r\n                      name=\"role\"\r\n                      component={ReactstrapInput}\r\n                    />\r\n                  </FormGroup>\r\n                  <ErrorMessage\r\n                    name=\"errorForm\"\r\n                    component={\"div\"}\r\n                    className=\"invalid-feedback\"\r\n                    style={{ display: \"block\" }}\r\n                  />\r\n                  <div style={{ float: \"right\" }}>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      color=\"primary\"\r\n                      size=\"sm\"\r\n                      disabled={isSubmitting}\r\n                    >\r\n                      Cập nhật\r\n                    </Button>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      size=\"sm\"\r\n                      onClick={props.closeModal}\r\n                    >\r\n                      Đóng\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateStaffForm;\r\n"]},"metadata":{},"sourceType":"module"}