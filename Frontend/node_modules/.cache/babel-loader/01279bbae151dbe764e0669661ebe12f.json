{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\\\u0110\\u1ED3 \\xE1n web\\\\Project Web \\u0110\\u1ED3 \\xC1n b\\u1EA3n cu\\u1ED1i\\\\codeguidi\\\\codeguidi\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\\\u0110\\u1ED3 \\xE1n web\\\\Project Web \\u0110\\u1ED3 \\xC1n b\\u1EA3n cu\\u1ED1i\\\\codeguidi\\\\codeguidi\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\\\u0110\\u1ED3 \\xE1n web\\\\Project Web \\u0110\\u1ED3 \\xC1n b\\u1EA3n cu\\u1ED1i\\\\codeguidi\\\\codeguidi\\\\Frontend\\\\src\\\\pages\\\\equipmentManager\\\\updateEquipForm.js\";\n\nimport React from \"react\";\nimport { Button, Card, CardBody, FormGroup } from \"reactstrap\";\nimport { Formik, FastField, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { ReactstrapInput } from \"reactstrap-formik\";\nimport { toastr } from \"react-redux-toastr\";\nimport Storage from \"../../Storage/Storage\";\nimport EquipmentApi from \"../../api/EquipmentApi\";\n\nvar UpdateEquipmentForm = function UpdateEquipmentForm(props) {\n  var showSuccessNotification = function showSuccessNotification(title, message) {\n    var options = {\n      timeOut: 2500,\n      showCloseButton: false,\n      progressBar: false,\n      position: \"top-right\"\n    };\n    toastr.success(title, message, options);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      equipmentId: sessionStorage.getItem(\"equipmentId\"),\n      equipmentName: sessionStorage.getItem(\"equipmentName\"),\n      classify: sessionStorage.getItem(\"classify\"),\n      description: sessionStorage.getItem(\"description\"),\n      brand: sessionStorage.getItem(\"brand\"),\n      staffName: sessionStorage.getItem(\"staffName\"),\n      insurance: sessionStorage.getItem(\"insurance\"),\n      equipmentStatus: sessionStorage.getItem(\"equipmentStatus\"),\n      errorForm: \"\"\n    },\n    validationSchema: Yup.object({\n      equipmentName: Yup.string().max(50, \"Must be less than 100 characters or equal\").required(\"Required\").test(\"checkUniqueEquipmentName\", \"This equipmentName is already exists.\", /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(equipmentName) {\n          var isExists;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return EquipmentApi.existsByEquipmentName(equipmentName);\n\n                case 2:\n                  isExists = _context.sent;\n                  return _context.abrupt(\"return\", !isExists);\n\n                case 4:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()),\n      classify: Yup.string().max(5, \"Must be lessthan 5 characters \").required(\"Required\"),\n      description: Yup.string().max(100, \"Must be lessthan 100 characters \").required(\"Required\"),\n      brand: Yup.string().max(50, \"Must be lessthan 50 characters \").required(\"Required\"),\n      staffName: Yup.string().max(50, \"Must be lessthan 50 characters \").required(\"Required\"),\n      insurance: Yup.string().max(20, \"Must be lessthan 20characters \").required(\"Required\"),\n      equipmentStatus: Yup.string().required(\"Required\").test(\"checkformequipmentStatus\", \"Vui lòng nhập vào 'READY' , 'USING' , 'BROKEN' hoặc 'REPAIR'\", function (equipmentStatus) {\n        if (equipmentStatus.match(\"READY\") || equipmentStatus.match(\"USING\") || equipmentStatus.match(\"BROKEN\") || equipmentStatus.match(\"REPAIR\")) {\n          return true;\n        }\n\n        return false;\n      })\n    }),\n    onSubmit: /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values, _ref2) {\n        var setFieldError;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                setFieldError = _ref2.setFieldError;\n                _context2.prev = 1;\n                _context2.next = 4;\n                return EquipmentApi.update(values.equipmentId, values.equipmentName, values.classify, values.description, values.brand, values.staffName, values.insurance, values.equipmentStatus);\n\n              case 4:\n                showSuccessNotification(\"Update Equipment\", \"Update Equipment Successfully!\");\n                Storage.removeEquipmentInfo();\n                window.location.reload();\n                _context2.next = 13;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](1);\n                setFieldError(\"errorForm\", \"There is an error from the server\");\n                console.log(_context2.t0);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 9]]);\n      }));\n\n      return function (_x2, _x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }(),\n    validateOnChange: false,\n    validateOnBlur: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, function (_ref4) {\n    var isSubmitting = _ref4.isSubmitting;\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m-sm-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      label: \"M\\xE3 thi\\u1EBFt b\\u1ECB\",\n      bsSize: \"sm\",\n      type: \"text\",\n      readonly: \"readonly\",\n      name: \"equipmentId\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      label: \"Tr\\u1EA1ng th\\xE1i\",\n      bsSize: \"sm\",\n      type: \"text\",\n      name: \"equipmentStatus\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      label: \"T\\xEAn thi\\u1EBFt b\\u1ECB\",\n      bsSize: \"sm\",\n      type: \"text\",\n      name: \"equipmentName\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      bsSize: \"sm\",\n      type: \"text\",\n      label: \"Ph\\xE2n lo\\u1EA1i thi\\u1EBFt b\\u1ECB\",\n      name: \"classify\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      bsSize: \"sm\",\n      type: \"text\",\n      label: \"M\\xF4 t\\u1EA3 thi\\u1EBFt b\\u1ECB\",\n      name: \"description\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      bsSize: \"sm\",\n      type: \"text\",\n      label: \"Th\\u01B0\\u01A1ng hi\\u1EC7u\",\n      name: \"brand\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      bsSize: \"sm\",\n      type: \"text\",\n      label: \"Nh\\xE2n vi\\xEAn qu\\u1EA3n l\\xFD\",\n      name: \"staffName\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      bsSize: \"sm\",\n      type: \"text\",\n      label: \"Th\\u1EDDi h\\u1EA1n b\\u1EA3o h\\xE0nh\",\n      name: \"insurance\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"errorForm\",\n      component: \"div\",\n      className: \"invalid-feedback\",\n      style: {\n        display: \"block\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: \"right\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"warning\",\n      size: \"sm\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }\n    }, \"C\\u1EADp nh\\u1EADt\"), \" \", /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      size: \"sm\",\n      onClick: props.closeModal,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }\n    }, \"\\u0110\\xF3ng\"))))));\n  }));\n};\n\nexport default UpdateEquipmentForm;","map":{"version":3,"sources":["E:/Đồ án web/Project Web Đồ Án bản cuối/codeguidi/codeguidi/Frontend/src/pages/equipmentManager/updateEquipForm.js"],"names":["React","Button","Card","CardBody","FormGroup","Formik","FastField","Form","ErrorMessage","Yup","ReactstrapInput","toastr","Storage","EquipmentApi","UpdateEquipmentForm","props","showSuccessNotification","title","message","options","timeOut","showCloseButton","progressBar","position","success","equipmentId","sessionStorage","getItem","equipmentName","classify","description","brand","staffName","insurance","equipmentStatus","errorForm","object","string","max","required","test","existsByEquipmentName","isExists","match","values","setFieldError","update","removeEquipmentInfo","window","location","reload","console","log","isSubmitting","display","float","closeModal"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Button, Card, CardBody, FormGroup } from \"reactstrap\";\r\nimport { Formik, FastField, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { ReactstrapInput } from \"reactstrap-formik\";\r\nimport { toastr } from \"react-redux-toastr\";\r\nimport Storage from \"../../Storage/Storage\";\r\nimport EquipmentApi from \"../../api/EquipmentApi\";\r\n\r\nconst UpdateEquipmentForm = (props) => {\r\n  const showSuccessNotification = (title, message) => {\r\n    const options = {\r\n      timeOut: 2500,\r\n      showCloseButton: false,\r\n      progressBar: false,\r\n      position: \"top-right\",\r\n    };\r\n    toastr.success(title, message, options);\r\n  };\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          equipmentId: sessionStorage.getItem(\"equipmentId\"),\r\n          equipmentName: sessionStorage.getItem(\"equipmentName\"),\r\n          classify: sessionStorage.getItem(\"classify\"),\r\n          description: sessionStorage.getItem(\"description\"),\r\n          brand: sessionStorage.getItem(\"brand\"),\r\n          staffName: sessionStorage.getItem(\"staffName\"),\r\n          insurance: sessionStorage.getItem(\"insurance\"),\r\n          equipmentStatus: sessionStorage.getItem(\"equipmentStatus\"),\r\n          errorForm: \"\",\r\n        }}\r\n        validationSchema={Yup.object({\r\n          equipmentName: Yup.string()\r\n            .max(50, \"Must be less than 100 characters or equal\")\r\n            .required(\"Required\")\r\n            .test(\r\n              \"checkUniqueEquipmentName\",\r\n              \"This equipmentName is already exists.\",\r\n              async (equipmentName) => {\r\n                const isExists = await EquipmentApi.existsByEquipmentName(\r\n                  equipmentName\r\n                );\r\n                return !isExists;\r\n              }\r\n            ),\r\n          classify: Yup.string()\r\n            .max(5, \"Must be lessthan 5 characters \")\r\n            .required(\"Required\"),\r\n          description: Yup.string()\r\n            .max(100, \"Must be lessthan 100 characters \")\r\n            .required(\"Required\"),\r\n          brand: Yup.string()\r\n            .max(50, \"Must be lessthan 50 characters \")\r\n            .required(\"Required\"),\r\n          staffName: Yup.string()\r\n            .max(50, \"Must be lessthan 50 characters \")\r\n            .required(\"Required\"),\r\n          insurance: Yup.string()\r\n            .max(20, \"Must be lessthan 20characters \")\r\n            .required(\"Required\"),\r\n          equipmentStatus: Yup.string()\r\n            .required(\"Required\")\r\n            .test(\r\n              \"checkformequipmentStatus\",\r\n              \"Vui lòng nhập vào 'READY' , 'USING' , 'BROKEN' hoặc 'REPAIR'\",\r\n              (equipmentStatus) => {\r\n                if (\r\n                  equipmentStatus.match(\"READY\") ||\r\n                  equipmentStatus.match(\"USING\") ||\r\n                  equipmentStatus.match(\"BROKEN\") ||\r\n                  equipmentStatus.match(\"REPAIR\")\r\n                ) {\r\n                  return true;\r\n                }\r\n                return false;\r\n              }\r\n            ),\r\n        })}\r\n        onSubmit={async (values, { setFieldError }) => {\r\n          try {\r\n            await EquipmentApi.update(\r\n              values.equipmentId,\r\n              values.equipmentName,\r\n              values.classify,\r\n              values.description,\r\n              values.brand,\r\n              values.staffName,\r\n              values.insurance,\r\n              values.equipmentStatus\r\n            );\r\n\r\n            showSuccessNotification(\r\n              \"Update Equipment\",\r\n              \"Update Equipment Successfully!\"\r\n            );\r\n            Storage.removeEquipmentInfo();\r\n            window.location.reload();\r\n          } catch (error) {\r\n            setFieldError(\"errorForm\", \"There is an error from the server\");\r\n            console.log(error);\r\n          }\r\n        }}\r\n        validateOnChange={false}\r\n        validateOnBlur={false}\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <Card>\r\n            <CardBody>\r\n              <div className=\"m-sm-4\">\r\n                <Form>\r\n                  <FormGroup>\r\n                    <FastField\r\n                      label=\"Mã thiết bị\"\r\n                      bsSize=\"sm\"\r\n                      type=\"text\"\r\n                      readonly=\"readonly\"\r\n                      name=\"equipmentId\"\r\n                      component={ReactstrapInput}\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <FastField\r\n                      label=\"Trạng thái\"\r\n                      bsSize=\"sm\"\r\n                      type=\"text\"\r\n                      name=\"equipmentStatus\"\r\n                      component={ReactstrapInput}\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <FastField\r\n                      label=\"Tên thiết bị\"\r\n                      bsSize=\"sm\"\r\n                      type=\"text\"\r\n                      name=\"equipmentName\"\r\n                      component={ReactstrapInput}\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <FastField\r\n                      bsSize=\"sm\"\r\n                      type=\"text\"\r\n                      label=\"Phân loại thiết bị\"\r\n                      name=\"classify\"\r\n                      component={ReactstrapInput}\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <FastField\r\n                      bsSize=\"sm\"\r\n                      type=\"text\"\r\n                      label=\"Mô tả thiết bị\"\r\n                      name=\"description\"\r\n                      component={ReactstrapInput}\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <FastField\r\n                      bsSize=\"sm\"\r\n                      type=\"text\"\r\n                      label=\"Thương hiệu\"\r\n                      name=\"brand\"\r\n                      component={ReactstrapInput}\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <FastField\r\n                      bsSize=\"sm\"\r\n                      type=\"text\"\r\n                      label=\"Nhân viên quản lý\"\r\n                      name=\"staffName\"\r\n                      component={ReactstrapInput}\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <FastField\r\n                      bsSize=\"sm\"\r\n                      type=\"text\"\r\n                      label=\"Thời hạn bảo hành\"\r\n                      name=\"insurance\"\r\n                      component={ReactstrapInput}\r\n                    />\r\n                  </FormGroup>\r\n                  <ErrorMessage\r\n                    name=\"errorForm\"\r\n                    component={\"div\"}\r\n                    className=\"invalid-feedback\"\r\n                    style={{ display: \"block\" }}\r\n                  />\r\n                  <div style={{ float: \"right\" }}>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      color=\"warning\"\r\n                      size=\"sm\"\r\n                      disabled={isSubmitting}\r\n                    >\r\n                      Cập nhật\r\n                    </Button>{\" \"}\r\n                    <Button\r\n                      color=\"primary\"\r\n                      size=\"sm\"\r\n                      onClick={props.closeModal}\r\n                    >\r\n                      Đóng\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateEquipmentForm;\r\n"]},"metadata":{},"sourceType":"module"}